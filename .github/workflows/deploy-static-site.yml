name: Build, Deploy, and Provision Infrastructure

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    # Add 'id-token' with 'write' permission for authenticating to GCP
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
        service_account: '${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}'
        project_id: '${{ secrets.GCP_BUCKET_NAME }}'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      id: init
      run: terraform init -backend-config="impersonate_service_account=${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}"
      working-directory: terraform

    - name: Terraform Validate
      id: validate
      run: terraform validate
      working-directory: terraform
    
    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve -no-color
      working-directory: terraform
      env:
        TF_VAR_project_id: ${{ secrets.GCP_BUCKET_NAME }}
        TF_VAR_github_repo: ${{ github.repository }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Use a specific LTS version
        cache: 'npm'

    - name: Install Dependencies
      run: npm install

    - name: Build Static Site
      run: npm run build

    - name: Deploy to Google Cloud Storage
      id: deploy
      uses: 'google-github-actions/upload-cloud-storage@v2.2.0'
      with:
        parent: false
        path: 'out' # The directory produced by `next build` with `output: 'export'`
        destination: '${{ secrets.GCP_BUCKET_NAME }}' # The GCS bucket to deploy to
        glob: '**' # Upload all files in the source directory

    - name: Generate Short URL
      id: shorten_url
      run: |
        FULL_URL="https://storage.googleapis.com/${{ secrets.GCP_BUCKET_NAME }}/index.html"
        SHORT_URL=$(curl -s https://tinyurl.com/api-create.php?url="$FULL_URL")
        echo "SHORT_URL=$SHORT_URL" >> $GITHUB_OUTPUT

    - name: Create Deployment Summary
      run: |
        echo "## Deployment Successful ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**View live site:** ${{ steps.shorten_url.outputs.SHORT_URL }}" >> $GITHUB_STEP_SUMMARY 